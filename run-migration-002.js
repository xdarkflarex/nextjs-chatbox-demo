/**
 * Script ƒë·ªÉ ch·∫°y migration 002: Th√™m c·ªôt is_processed
 * Ch·∫°y: node run-migration-002.js
 */

require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Missing Supabase credentials in .env.local');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function runMigration() {
  console.log('üöÄ Running migration 002: Add is_processed column...\n');

  try {
    // Th√™m c·ªôt is_processed
    console.log('1Ô∏è‚É£ Adding is_processed column...');
    const { error: error1 } = await supabase.rpc('exec_sql', {
      sql_query: `
        ALTER TABLE chat_sessions 
        ADD COLUMN IF NOT EXISTS is_processed BOOLEAN DEFAULT FALSE;
      `
    });
    
    if (error1) {
      console.log('‚ö†Ô∏è  Column might already exist:', error1.message);
    } else {
      console.log('‚úÖ is_processed column added');
    }

    // Th√™m c·ªôt processed_at
    console.log('\n2Ô∏è‚É£ Adding processed_at column...');
    const { error: error2 } = await supabase.rpc('exec_sql', {
      sql_query: `
        ALTER TABLE chat_sessions 
        ADD COLUMN IF NOT EXISTS processed_at TIMESTAMP WITH TIME ZONE;
      `
    });
    
    if (error2) {
      console.log('‚ö†Ô∏è  Column might already exist:', error2.message);
    } else {
      console.log('‚úÖ processed_at column added');
    }

    // Th√™m c·ªôt processed_by
    console.log('\n3Ô∏è‚É£ Adding processed_by column...');
    const { error: error3 } = await supabase.rpc('exec_sql', {
      sql_query: `
        ALTER TABLE chat_sessions 
        ADD COLUMN IF NOT EXISTS processed_by VARCHAR(100);
      `
    });
    
    if (error3) {
      console.log('‚ö†Ô∏è  Column might already exist:', error3.message);
    } else {
      console.log('‚úÖ processed_by column added');
    }

    // T·∫°o index
    console.log('\n4Ô∏è‚É£ Creating index...');
    const { error: error4 } = await supabase.rpc('exec_sql', {
      sql_query: `
        CREATE INDEX IF NOT EXISTS idx_sessions_is_processed 
        ON chat_sessions(is_processed);
      `
    });
    
    if (error4) {
      console.log('‚ö†Ô∏è  Index might already exist:', error4.message);
    } else {
      console.log('‚úÖ Index created');
    }

    console.log('\n‚úÖ Migration 002 completed successfully!');
    console.log('\nüìä New columns added to chat_sessions:');
    console.log('   - is_processed (BOOLEAN)');
    console.log('   - processed_at (TIMESTAMP)');
    console.log('   - processed_by (VARCHAR)');

  } catch (error) {
    console.error('\n‚ùå Migration failed:', error.message);
    process.exit(1);
  }
}

runMigration();
